// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model VolunteerSupportRequest {
  id                Int            @id @default(autoincrement())
  organizations     Organization[]
  fio               String
  phone             String
  mail              String
  post              String?
  nameEvent         String
  date              DateTime[]
  addressEvent      String[]
  descriptionEvent  String
  quantityVolunteer Int
  skills            String[]
  clothingVolunteer String
  ageRestrictions   Int[]
  fnds              Fnd[]
  statusRequest     String
}

model Organization {
  id                       Int                       @id @default(autoincrement())
  name                     String                    @unique
  volunteerSupportRequests VolunteerSupportRequest[]
  event                    Event[]
}

model Fnd {
  id                        Int                      @id @default(autoincrement())
  nameFND                   String
  dateFND                   DateTime[]
  addresses                 String[]
  times                     FndTime[]
  quantityVolunteerFND      Int
  descriptionFND            String
  volunteerSupportRequests  VolunteerSupportRequest? @relation(fields: [volunteerSupportRequestId], references: [id], onDelete: Cascade)
  event                     Event                    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId                   Int
  volunteerSupportRequestId Int?
}

model FndTime {
  id    Int      @id @default(autoincrement())
  start DateTime
  end   DateTime
  fnd   Fnd      @relation(fields: [fndId], references: [id], onDelete: Cascade)
  fndId Int
}

model Student {
  id                 Int      @id @default(autoincrement())
  name               String
  surName            String
  middleName         String
  insitution         String
  group              String
  telNumber          String
  birthday           DateTime
  email              String   @unique
  password           String
  dateOfRegistration DateTime @default(now())
  lastActivity       DateTime @default(now())
  gender             String
  roles              String[] @default([])
  events             Event[]
}

model Event {
  id                Int            @id @default(autoincrement())
  nameEvent         String
  organizations     Organization[]
  addressEvent      String[]
  descriptionEvent  String
  quantityVolunteer Int
  skills            String[]
  clothingVolunteer String
  ageRestrictions   Int[]
  fnds              Fnd[]
  bonuses           String[]
  students          Student[]
  mainImagePath     String?
}

enum Role {
  USER
  ADMIN
  TEAMLEADER
}
